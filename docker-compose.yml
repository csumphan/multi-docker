version: '3'
services:
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  postgres:
    image: 'postgres:latest'
  redis:
    image: 'redis:latest'
  api:
    build:
      dockerfile: Dockerfile.dev # just the name of the dockerfile
      context: ./server #looks into a path for the dockerfile
    volumes:
      - /app/node_modules
      - ./server:/app # any time we access anything in the app directory it will use the src for this directory
    environment:
      - REDIS_HOST=redis #uses the name opf the services
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres #service name above
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis #uses the name opf the services
      - REDIS_PORT=6379
# env variable in docker compose files are added during run time container
# add in nginx services, will look at incoming request path if has /api route to express server

#default.conf
# tell nginx theres upstream server client and server
# listen on port 80
# if any one comes from / send them to client
# if /api send them to server


#Deploy multi container to EB
# push code to github
# travis automatically pull repo
# travis builds a test images, then test code
# travis build prod images
# travis pushes built prod images to DockerHub
# travis pushes project to AWS EB
# EB pull images from Docker Hub, deploys